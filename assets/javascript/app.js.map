{"version":3,"sources":["SearchForm.js"],"names":["$","entwine","this","window","langeditor","instances","modules","name","class","_SearchForm2","default","length","jQuery","instance","Constructor","Object","defineProperty","exports","SearchForm","container","time","_createClass","_this","input","addEventListener","e"],"mappings":"whBAAMA,EAAAC,QAAA,KAAA,SAAAD,KAEF,4BAAAC,kCACIC,IACAC,QAAaC,YAFMC,aAAAC,UAAAC,KAAA,cAAAC,MAAAC,EAMnBC,0GAGSC,oEAMLC,mEAODC,EAAQC,iFAJmBC,OAAAC,eAAMC,EAAA,qBAPpC,kRAkBIC,GAAWC,UAEfD,QACWC,UAAPA,yFAGGC,KAAA,4BAIHC,GAAQH,QAAZ,mBACI,cACAI,GAAJpB,UAIQqB,MAAAC,iBAAA,QAAA,SAAuCC","file":"app.js","sourcesContent":["class SearchForm {\n\n    constructor(container) {\n        this.container = container;\n        this.input = this.container.querySelector('input[name=\"search\"]');\n        this.timeout = null; // init timeout variable to be used below in bindEvents\n        this.time = 500; // in ms\n\n        this.bindEvents();\n    }\n\n    bindEvents() {\n        // listen for keystroke events\n        this.input.addEventListener('keyup', (e) => {\n            // clear timeout if it has already been set.\n            // this will prevent the previous task from executing\n            // if it has been less than <MILLISECONDS>\n            clearTimeout(this.timeout);\n\n            // make a new timeout set to go off in {this.time}\n            this.timeout = setTimeout(() => this.search(this.input.value), this.time);\n        });\n    }\n\n    search(string) {\n        let link = this.setUrlParameter(\n            this.container.getAttribute('action'),\n            'search',\n            string\n        );\n\n        let moduleId = this.container.querySelector('input[name=\"moduleId\"]');\n\n        if (moduleId) {\n            link = this.setUrlParameter(link, 'moduleId', moduleId.value);\n        }\n\n        window.location = link;\n    }\n\n    setUrlParameter(url, key, value) {\n        let parts = url.split(\"#\", 2), anchor = parts.length > 1 ? \"#\" + parts[1] : '';\n        let query = (url = parts[0]).split(\"?\", 2);\n        if (query.length === 1)\n            return url + \"?\" + key + \"=\" + value + anchor;\n\n        for (let params = query[query.length - 1].split(\"&\"), i = 0; i < params.length; i++)\n            if (params[i].toLowerCase().startsWith(key.toLowerCase() + \"=\"))\n                return params[i] = key + \"=\" + value, query[query.length - 1] = params.join(\"&\"), query.join(\"?\") + anchor;\n\n        return url + \"&\" + key + \"=\" + value + anchor\n    }\n}\n\nexport default SearchForm;"]}